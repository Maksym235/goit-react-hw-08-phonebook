{"version":3,"file":"static/js/880.3caf58ec.chunk.js","mappings":"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","sources":["components/FormToAddContact/FormToAddContact.styled.js","redux/Contacts/selectors.js","components/FormToAddContact/FormToAddContact.js","components/FindInput/FindInput.styled.js","components/FindInput/FindInput.js","components/ContactItem/ContactItem.styled.js","components/ContactItem/ContactItem.js","components/ContactsList/ContactList.styled.js","components/ContactsList/ContactsList.js","components/hooks/useFilterContacts.js","pages/Contacts/Contacts.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const FormStyled = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  width: 300px;\n  margin-left: auto;\n  margin-right: auto;\n  margin-bottom: 50px;\n  border: 2px solid black;\n  border-radius: 10px;\n  padding: 10px;\n`;\n\nexport const Title = styled.h1`\n  font-size: 26px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 3px;\n  font-weight: 400;\n  font-size: 18px;\n`;\n\nexport const Input = styled.input`\n  padding-top: 10px;\n  border: none;\n  background-color: transparent;\n  border-bottom: 1px solid black;\n\n  &:focus {\n    background-color: transparent;\n    outline: none;\n  }\n`;\n\nexport const Button = styled.button`\n  widht: 150px;\n  height: 30px;\n  border-radius: 10px;\n  border: none;\n  background-color: #7b8189;\n  color: #ffffff;\n\n  transition: background-color 0.5s ease-out, color 0.5s ease-out;\n\n  &:hover {\n    background-color: #bfa8ee;\n    color: #000000;\n  }\n`;\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.contacts;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectFilter = state => state.filter.filter;\n\nexport const selectFilteredContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n","import { useState } from 'react';\nimport { nanoid } from 'nanoid';\nimport {\n  FormStyled,\n  Input,\n  Label,\n  Button,\n  Title,\n} from './FormToAddContact.styled';\nimport { BsFillTelephonePlusFill } from 'react-icons/bs';\n\n// -------REDUX-----------------\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/Contacts/operations';\nimport { selectContacts } from 'redux/Contacts/selectors';\nexport function Form() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  // --------------------------------------------\n  const dispatch = useDispatch();\n\n  const onHandlerChange = evt => {\n    switch (evt.target.name) {\n      case 'name':\n        setName(evt.target.value);\n        break;\n      case 'number':\n        setNumber(evt.target.value);\n        break;\n      default:\n        return;\n    }\n  };\n  const contacts = useSelector(selectContacts);\n\n  const onFormSubmmit = evt => {\n    evt.preventDefault();\n\n    if (contacts.find(contact => contact.name === name)) {\n      alert(`${name} is already in contacts`);\n      return;\n    }\n\n    const newContact = {\n      id: nanoid(),\n      name,\n      number,\n    };\n    dispatch(addContact(newContact));\n\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <FormStyled onSubmit={onFormSubmmit}>\n      <Title>\n        Add contact <BsFillTelephonePlusFill />\n      </Title>\n      <Label>\n        Name\n        <Input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          placeholder=\"enter name\"\n          onChange={onHandlerChange}\n        />\n      </Label>\n      <Label>\n        Number\n        <Input\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          placeholder=\"enter number\"\n          onChange={onHandlerChange}\n        />\n      </Label>\n      <Button>Add contact</Button>\n    </FormStyled>\n  );\n}\n","import styled from 'styled-components';\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  font-size: 18px;\n  font-weight: 400;\n  width: 300px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const InputSt = styled.input`\n  padding-top: 10px;\n  border: none;\n  background-color: transparent;\n  border-bottom: 1px solid black;\n\n  &:focus {\n    background-color: transparent;\n    outline: none;\n  }\n`;\n","import React from 'react';\nimport { Label, InputSt } from './FindInput.styled';\n\n//---------------REDUX-------------\nimport { useDispatch } from 'react-redux';\nimport { filterContacts } from 'redux/Contacts/filterSlice';\n\nexport function Input() {\n  const dispatch = useDispatch();\n  const HandleChange = evt => dispatch(filterContacts(evt.target.value));\n\n  return (\n    <Label>\n      Find contact by name\n      <InputSt type=\"text\" name=\"find\" onChange={HandleChange} />\n    </Label>\n  );\n}\n","import styled from 'styled-components';\n\nexport const Item = styled.li`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  font-size: 18px;\n  font-weight: 500;\n  padding: 5px;\n  border: 1px solid black;\n  border-radius: 5px;\n  color: #ffffff;\n  background-color: #bfa8ee;\n  transition: background-color 0.2s ease-out;\n\n  &:hover {\n    background-color: #9886be;\n  }\n`;\n\nexport const Button = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 20px;\n  height: 20px;\n  background-color: transparent;\n  padding: 0;\n  margin: 0;\n  border: none;\n  transition: scale 0.1s ease-out;\n\n  &:hover {\n    scale: 1.2;\n  }\n`;\n","import { AiFillCloseCircle } from 'react-icons/ai';\nimport { Item, Button } from './ContactItem.styled';\nimport PropTypes from 'prop-types';\n\n// ----------REDUX---------------\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/Contacts/operations';\n\nexport function Contact({ contact: { id, name, number } }) {\n  const dispatch = useDispatch();\n\n  const handleDelete = () => dispatch(deleteContact(id));\n  return (\n    <Item key={id}>\n      {name}: {number}\n      <Button type=\"button\" onClick={handleDelete}>\n        <AiFillCloseCircle />\n      </Button>\n    </Item>\n  );\n}\n\nContact.propTypes = {\n  contact: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  }),\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  list-style: none;\n  padding: 0;\n  display flex;\n  flex-direction: column;\n  justify-content: center;\n  gap:10px;\n  width: 500px;\n  margin-top: 30px;\n    margin-left: auto;\n  margin-right: auto;\n  padding: 20px;\n    border-radius: 15px;\n      background-color: #cdd7e5;\n  box-shadow: 15px 29px 41px 4px rgba(150, 148, 150, 1);\n  -moz-box-shadow: 15px 29px 41px 4px rgba(150, 148, 150, 1);\n  box-shadow: 15px 29px 41px 4px rgba(150, 148, 150, 1);\n`;\n","import { Contact } from 'components/ContactItem/ContactItem';\nimport { List } from './ContactList.styled';\nimport { useContacts } from 'components/hooks/useFilterContacts';\n\nexport function ContactList() {\n  const contacts = useContacts();\n  return (\n    <List>\n      {contacts.map(contact => {\n        return <Contact key={contact.id} contact={contact} />;\n      })}\n    </List>\n  );\n}\n","import { useSelector } from 'react-redux';\nimport { selectFilteredContacts } from 'redux/Contacts/selectors';\n\nexport const useContacts = () => useSelector(selectFilteredContacts);\n","//-----------REACT--------------\nimport { useEffect } from 'react';\n\n//-----------REDUX---------------\nimport { useDispatch } from 'react-redux';\nimport { fetchContacts } from 'redux/Contacts/operations';\n\n//-----------COMPONENTS-------------\nimport { Form } from '../../components/FormToAddContact/FormToAddContact';\nimport { Input } from '../../components/FindInput/FindInput';\nimport { ContactList } from '../../components/ContactsList/ContactsList';\n\nexport default function Contacts() {\n  const dispach = useDispatch();\n\n  useEffect(() => {\n    dispach(fetchContacts());\n  }, [dispach]);\n  return (\n    <div>\n      <Form />\n      <Input />\n      <ContactList />\n    </div>\n  );\n}\n"],"names":["FormStyled","styled","Title","Label","Input","Button","selectContacts","state","contacts","selectFilteredContacts","createSelector","filter","contact","name","toLowerCase","includes","Form","useState","setName","number","setNumber","dispatch","useDispatch","onHandlerChange","evt","target","value","useSelector","reset","onSubmit","preventDefault","find","alert","newContact","id","nanoid","addContact","type","pattern","title","required","placeholder","onChange","InputSt","filterContacts","Item","Contact","onClick","deleteContact","List","ContactList","map","Contacts","dispach","useEffect","fetchContacts"],"sourceRoot":""}